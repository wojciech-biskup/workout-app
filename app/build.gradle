plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

Properties localProperties = new Properties()
def localFile = project.rootProject.file('local.properties')
if (localFile.exists()) {
    localProperties.load(localFile.newDataInputStream())
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.wojciechbiskup.workoutapp"
        minSdk 26
        targetSdk 30
        versionCode 1
        versionName "1.0"

        applicationId "com.wojciechbiskup.workoutapp"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def mapsApiKey = localProperties.getProperty("mapsApiKey", "")
        manifestPlaceholders["mapsApiKey"] = mapsApiKey
        buildConfigField("String", "mapsApiKey", "\"${mapsApiKey}\"")
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        benchmark {
            initWith buildTypes.release
            signingConfig signingConfigs.debug
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'benchmark-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xjvm-default=all"
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-opt-in=androidx.wear.compose.material.ExperimentalWearMaterialApi"
        freeCompilerArgs += "-opt-in=androidx.compose.animation.ExperimentalAnimationApi"
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

dependencies {
    def composeBom = platform(libs.androidx.compose.bom)
    def roomVersion = "2.5.2"
    def numberPickerVersion = "1.0.3"

    implementation composeBom
    implementation libs.androidx.activity.compose
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.foundation
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.compose.material.iconscore
    implementation libs.compose.material.iconsext

    implementation libs.androidx.lifecycle.viewmodel.ktx

    implementation libs.androidx.lifecycle.viewmodel.savedstate

    implementation libs.androidx.lifecycle.common.java8

    implementation libs.wear.compose.material

    implementation libs.wear.compose.foundation

    implementation libs.wear.compose.navigation
    implementation libs.navigation.ui.ktx

    implementation libs.androidx.metrics.performance

    implementation libs.com.google.maps.compose
    implementation libs.com.google.play.services.maps

    implementation libs.horologist.composables
    implementation libs.horologist.compose.layout
    implementation libs.wear.input

    implementation libs.androidx.splashscreen
    implementation libs.androidx.tracing.ktx

    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    kapt("androidx.room:room-compiler:$roomVersion")

    implementation "com.chargemap.compose:numberpicker:$numberPickerVersion"

    testImplementation libs.junit
    androidTestImplementation composeBom
    androidTestImplementation libs.test.ext.junit
    androidTestImplementation libs.test.espresso.core
    androidTestImplementation libs.compose.ui.test.junit4
    debugImplementation libs.compose.ui.tooling

    androidTestImplementation libs.androidx.test.ext
    androidTestImplementation libs.androidx.test.ext.ktx
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.compose.ui.test.junit4
    androidTestImplementation libs.compose.ui.test.manifest
}
